/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DocsIndexRouteImport } from './routes/docs/index'
import { Route as DocsBuiltinsRouteImport } from './routes/docs/builtins'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsIndexRoute = DocsIndexRouteImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsBuiltinsRoute = DocsBuiltinsRouteImport.update({
  id: '/docs/builtins',
  path: '/docs/builtins',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/docs/builtins': typeof DocsBuiltinsRoute
  '/docs': typeof DocsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/docs/builtins': typeof DocsBuiltinsRoute
  '/docs': typeof DocsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/docs/builtins': typeof DocsBuiltinsRoute
  '/docs/': typeof DocsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/docs/builtins' | '/docs'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/docs/builtins' | '/docs'
  id: '__root__' | '/' | '/docs/builtins' | '/docs/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocsBuiltinsRoute: typeof DocsBuiltinsRoute
  DocsIndexRoute: typeof DocsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/': {
      id: '/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/builtins': {
      id: '/docs/builtins'
      path: '/docs/builtins'
      fullPath: '/docs/builtins'
      preLoaderRoute: typeof DocsBuiltinsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocsBuiltinsRoute: DocsBuiltinsRoute,
  DocsIndexRoute: DocsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
